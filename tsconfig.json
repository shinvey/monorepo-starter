{
  "compilerOptions": {
    "noEmit": true,
    "target": "esnext",
    /**
     dynamic import 类型检查需要设置 module

     配合ts-node，可以直接gulp or webpack的配置改成ts后缀的文件
     module改为commonjs是因为 https://github.com/TypeStrong/ts-node#import-statements

     当前配置不影响@babel/preset-typescript
     */
    // "module": "commonjs",
    "moduleResolution": "node",
    /*
    Process & infer types from .js files.
    在typescript文件中能够识别js文件和类型
    */
    "allowJs": true,
    // Import non-ES modules as default imports.
    "esModuleInterop": true,
    // used with outDir
    // "rootDir": ".",
    // Module Resolution https://www.typescriptlang.org/docs/handbook/module-resolution.html
    "baseUrl": ".",
    /*
    path mapping
    https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping
    */
    "paths": {
      /*
      This tells the compiler for any module import that matches the pattern "*" (i.e. all values), to look in two locations:
      1. <moduleName> => <baseUrl>/node_modules/<moduleName>
      2. <moduleName> => <baseUrl>/packages/<moduleName>
      */
      "*": ["node_modules", "packages"]
    },
    // 支持引入json文件
    "resolveJsonModule": true,
    // 输出*.d.ts类型文件
    // "noEmit": false,
    "declaration": true
    // "emitDeclarationOnly": true,
    // "declarationDir": "dist",
    // 跳过node_modules/**/*.d.ts类型检查
    // "skipLibCheck": true // https://github.com/Microsoft/TypeScript/issues/14293
  },
  "include": ["typings","packages"],
  "exclude": ["node_modules"]
}
